{
	"DOM Content Loaded": {
		"prefix": "DOMContent",
		"scope": "javascript, typescript",
		"body": [
		  "document.addEventListener('DOMContentLoaded', () => {",
		  "",
		  "    console.log('Carregou!');",
		  "",
		  "});"
		],
		"description": "DOM Content Loaded"
	  },
	"Element By Id": {
		"prefix": "docId",
		"scope": "javascript, typescript",
		"body": [
			"= document.getElementById(''),"
		],
		"description": ""
	},
	"Flex Center": {
		"prefix": "flexcent",
		"scope": "css",
		"body": [
		  "display: flex;",
		  "flex-direction: column;",
		  "align-items: center;",
		  "justify-content: center;"
		],
		"description": "Flex Center"
	  },
	  "React": {
		"prefix": "react",
		"scope": "javascript, typescript",
		"body": [
		  "import React from 'react';"
		],
		"description": "Easy import"
	  },
	  "Imports React": {
		"prefix": "imppack",
		"scope": "javascript, typescript",
		"body": [
		  "import {  } from '';"
		],
		"description": "Easy import"
	  },
	  "Imports Files": {
		"prefix": "impfile",
		"scope": "javascript, typescript",
		"body": [
		  "import  from './';"
		],
		"description": "Easy import"
	  },
	  "Styled Components": {
		"prefix": "styled",
		"scope": "javascript, typescript",
		"body": [
		  "import styled from 'styled-components/native';"
		],
		"description": "Easy import"
	  },
	  "Arrow function": {
		"prefix": "arrow",
		"scope": "javascript, typescript, tsx",
		"body": [
		  "() => {",
		  "",
		  "}"
		],
		"description": "Arrow function"
	  },
	  "Objects Loops": {
		"prefix": "objLoop",
		"scope": "javascript, typescript",
		"body": [
		  "for (let prop in obj) {",
		  "  console.log(\"obj.\" + prop + \" = \" + obj[prop]);",
		  "}"
		],
		"description": ""
	  },
	  "Code block separator": {
		"prefix": "comments",
		"scope": "javascript, typescript",
		"body": [
		  "// ==========================================================================================",
		  "// setion name",
		  "// ==========================================================================================",
		  ""
		],
		"description": ""
	  },
	  "HTML code block separator": {
		"prefix": "htmlcomm",
		"scope": "html",
		"body": [
		  "<!-- ------------------------------------------------------------------- -->",
		  "<!-- nome da secao -->",
		  "<!-- ------------------------------------------------------------------- -->"
		],
		"description": ""
	  },
	  "Zero Fill": {
		"prefix": "zerofill",
		"scope": "javascript, typescript",
		"body": [
		  "const zeroFill = n => {",
		  "        return ('0' + n).slice(-2);",
		  "    }"
		],
		"description": ""
	  }
}