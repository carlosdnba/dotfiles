{
	"DOM Content Loaded": {
		"prefix": "DOMContent",
		"body": [
			"document.addEventListener('DOMContentLoaded', () => {",
			"",
			"    console.log('Carregou!');",
			"",
			"});"
		],
		"description": "DOM Content Loaded"
	},
	"Element By Id": {
		"prefix": "docId",
		"body": [
			"= document.getElementById(''),"
		],
		"description": ""
	},
	"Flex Center": {
		"prefix": "flexcent",
		"body": [
			"display: flex;",
			"flex-direction: column;",
			"align-items: center;",
			"justify-content: center;"
		],
		"description": "Flex Center"
	},
	"React": {
		"prefix": "react",
		"body": [
			"import React from 'react';"
		],
		"description": "Easy import"
	},
	"Imports React": {
		"prefix": "imppack",
		"body": [
			"import {  } from '';"
		],
		"description": "Easy import"
	},
	"Imports Files": {
		"prefix": "impfile",
		"body": [
			"import  from './';"
		],
		"description": "Easy import"
	},
	"Styled Components": {
		"prefix": "styled",
		"body": [
			"import styled from 'styled-components/native';"
		],
		"description": "Easy import"
	},
	"Arrow function": {
		"prefix": "arrow",
		"body": [
			"() => {",
			"",
			"}"
		],
		"description": "Arrow function"
	},
	"IIFE": {
		"prefix": "iife",
		"body": [
			"(async () => {",
			"",
			"})();"
		],
		"description": ""
	},
	"Objects Loops": {
		"prefix": "objLoop",
		"body": [
			"for (let prop in obj) {",
			"  console.log(\"obj.\" + prop + \" = \" + obj[prop]);",
			"}"
		],
		"description": ""
	},
	"Code block separator": {
		"prefix": "comments",
		"body": [
			"// ==========================================================================================",
			"// section name",
			"// ==========================================================================================",
			""
		],
		"description": ""
	},
	"HTML code block separator": {
		"prefix": "htmlcomm",
		"body": [
			"<!-- ------------------------------------------------------------------- -->",
			"<!-- nome da secao -->",
			"<!-- ------------------------------------------------------------------- -->"
		],
		"description": ""
	},
	"YML code block separator": {
		"prefix": "ymlcomm",
		"body": [
			"# ==========================================================================================",
			"# section name",
			"# =========================================================================================="
		],
		"description": ""
	},
	"Zero Fill": {
		"prefix": "zerofill",
		"body": [
			"const zeroFill = n => {",
			"        return ('0' + n).slice(-2);",
			"    }"
		],
		"description": ""
	},
	"": {
		"prefix": "imp",
		"body": [
			"import { something } from 'package';"
		],
		"description": ""
	},
	"No focus": {
		"prefix": "nofocus",
		"body": [
			"textarea:focus, input:focus, select:focus {",
			"  box-shadow: 0 0 0 0;",
			"  border: 0 none;",
			"  outline: 0;",
			"} "
		],
		"description": "No focus"
	},
	"React icons": {
		"prefix": "ri",
		"body": [
			"import {  } from 'react-icons/'"
		],
		"description": "React icons"
	},
	"Component Style": {
		"prefix": "compsty",
		"body": [
			"import '../styles/components/component.css';"
		],
		"description": "Component Style"
	},
	"Page Style": {
		"prefix": "pagesty",
		"body": [
			"import '../styles/pages/page.css';"
		],
		"description": "Page Style"
	},
	"Const function": {
		"prefix": "consfunc",
		"body": [
			"const Function = () => {",
			"    ",
			"}"
		],
		"description": "Const function"
	},
	"Arrow err": {
		"prefix": "arrowerr",
		"body": [
			"(err, data) => {",
			"  if (err) return console.log(`Error: ${err}.`);",
			"",
			"}"
		],
		"description": ""
	},
	"Arrow req res": {
		"prefix": "arreq",
		"body": [
			"(req, res) => {",
			"",
			"}"
		],
		"description": "Arrow function"
	},
}